"""
Django settings for exchange_mapper project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import environ
from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env()
environ.Env.read_env()

CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.math_challenge'
CAPTCHA_FONT_SIZE = 40
CAPTCHA_BACKGROUND_COLOR = '#FF0000'
# CAPTCHA_FOREGROUND_COLOR = '#FF0000'
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'sso',
    'crispy_forms',
    'captcha',
    'django_extensions',
    'ckeditor'
]
CRISPY_TEMPLATE_PACK = 'bootstrap4'
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'exchange_mapper.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'exchange_mapper.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
"""
#sql6 database
DATABASES = {
     'default': {
         'ENGINE': 'django.db.backends.mysql',
         'NAME': 'sql6439143',
         'USER': 'sql6439143',
         'PASSWORD': 'BcW4jHtGfr',
         'HOST': 'sql6.freesqldatabase.com',
         'PORT': '3306'

    }
}
"""
# This is for dbsqlite database
# DATABASES = {
#      'default': {
#          'ENGINE': 'django.db.backends.sqlite3',
#          'NAME': BASE_DIR / 'db.sqlite3',
#      }
# }
"""
Earlier Database remotemysql:-"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('DATABASE_NAME'),
        'USER': env('DATABASE_USER'),
        'PASSWORD': env('DATABASE_PASS'),
        'HOST': env('DATABASE_HOST'),
        'PORT': env('DATABASE_PORT')
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTHENTICATION_BACKENDS = [
    'sso.backend.OauthBackend',
    'django.contrib.auth.backends.ModelBackend',
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# media files
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
STATICFILES_DIRS = [os.path.join(STATIC_ROOT, "static")
                    ]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Username: gXda2dY7qR

# Database name: gXda2dY7qR

# Password: jWpgdD9yDq

# Server: remotemysql.com

# Port: 3306

# OAUTH config settings
LOGIN_URL = "/"
# In case user is not logged in or doesn't have enough permissions to view the content
FALLBACK_URL = "/"

CLIENT_ID = env('CLIENT_ID')


CLIENT_SECRET = env('CLIENT_SECRET')

# ldap is necessary for login, pass only necessary scopes. seperate with spaces
SCOPE = 'basic profile program ldap picture'

# Eg: SCOPE = 'profile ldap program'

# username is mandatory field. seperate with commas
FIELDS = 'username,first_name,last_name,roll_number,program,profile_picture,email'
# Eg: FIELDS = 'username,first_name,last_name,email,roll_number'

REDIRECT_URI = 'http://localhost:8000/complete' # should end with /oauth/complete (the view is provided by this app)
LOGIN_COMPLETE_REDIRECT = 'http://localhost:8000'
LOGOUT_REDIRECT = 'http://localhost:8000/' # redirect to this URL after logout.



# REDIRECT_URI = 'https://1c9d-2401-4900-362c-41ef-204b-3cfe-4084-58b1.ngrok.io/complete'
# LOGIN_COMPLETE_REDIRECT = 'https://1c9d-2401-4900-362c-41ef-204b-3cfe-4084-58b1.ngrok.io'
# LOGOUT_REDIRECT = 'https://1c9d-2401-4900-362c-41ef-204b-3cfe-4084-58b1.ngrok.io/'

#  The token cannot be accessed via JavaScript if CSRF_COOKIE_HTTPONLY is set to TRUE.
CSRF_COOKIE_HTTPONLY = True


# secer = cHGCqJlgW2RSHNIQE3yQg0upIwLy9ZjEecu7VNk3e5cvfJwUWylSxZH2Pr7YLaOLQvs7ZcMNyE0dyYMXOOI8QIA65eCs66rFjf5k8oj6ypdN1CchAYXpMNAaOjUAvqPC
# clien id = d9EdGfg1f9T52N24XfbXMyb3aWyOMFGPoGmQ10tW
